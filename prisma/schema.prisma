// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  fullName    String
  email       String       @unique
  phone       String       @unique
  password    String
  role        Role
  reviews     Review[]
  reservations Reservation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Service {
  id          Int          @id @default(autoincrement())
  name        String
  duration    Int
  imageUrl    String?
  price       BigInt
  description String     
  branchId    Int
  branch      Branch       @relation(fields: [branchId], references: [id])
  reservations Reservation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Review {
  id          Int          @id @default(autoincrement())
  customerId  Int
  customer    User         @relation(fields: [customerId], references: [id])
  starRating  Int
  comment     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([customerId])
}

model Reservation {
  id          Int          @id @default(autoincrement())
  userId      Int
  serviceId   Int
  branchId    Int
  date        DateTime
  user        User         @relation(fields: [userId], references: [id])
  service     Service      @relation(fields: [serviceId], references: [id])
  branch      Branch       @relation(fields: [branchId], references: [id]) 
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([userId])
  @@index([serviceId])
  @@index([branchId])
}

model Branch {
  id          Int          @id @default(autoincrement())
  name        String
  description String      @db.Text
  location    String
  phone       String
  openingTime DateTime
  closingTime DateTime
  services    Service[]
  stylists    Stylist[]
  reservations Reservation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@unique([name, location])
}

model Stylist {
  id            Int      @id @default(autoincrement())
  name          String
  imageUrl    String?
  branchId      Int
  branch        Branch   @relation(fields: [branchId], references: [id])
  maleCutPrice  Int      
  femaleCutPrice Int     
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
}